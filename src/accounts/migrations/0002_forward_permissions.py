# Generated by Django 3.2.16 on 2023-01-07 00:52

from django.contrib.auth.models import Group, Permission
from django.contrib.auth import get_user_model
from django.contrib.contenttypes.models import ContentType
from django.db import migrations

def create_permissions(apps, schema_editor):
    User = get_user_model()
    Category = apps.get_model("quizzes", "Category")
    Question = apps.get_model("quizzes", "Question")
    
    category_content_type = ContentType.objects.get_for_model(Category)
    question_content_type = ContentType.objects.get_for_model(Question)
    user_content_type = ContentType.objects.get_for_model(User)
    permissions = [
        {
            'codename':'can_play',
            'name':'Can Play The quiz',
            'content_type':user_content_type
        },
        {
            'codename':'can_consult_ranking',
            'name':'Can Consult The Global Ranking',
            'content_type':user_content_type
        },
        {
            'codename':'can_create_category',
            'name':'Can Create Category',
            'content_type':category_content_type
        },
        {
            'codename':'can_create_question',
            'name':'Can Create question',
            'content_type':question_content_type
        }

    ]
    for permission in permissions:
        Permission(**permission).save()

def create_permission_groups(apps, schema_editor):
    groups = [
        {
            'id':1,
            'name':'Admin', 
            'permissions':[
                Permission.objects.get(codename="can_create_question"),
                Permission.objects.get(codename="can_create_category")
            ]
        }, 
        {
            'id':2,
            'name':'Player', 
            'permissions':[
                Permission.objects.get(codename="can_play"),
                Permission.objects.get(codename="can_consult_ranking")
            ]
        }
    ]
    for group in groups:
        group_obj = Group.objects.create(name=group['name'])
        for permission in group['permissions']:
            group_obj.permissions.add(permission)
        group_obj.save()
    

class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('quizzes', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_permissions),
        migrations.RunPython(create_permission_groups),
    ]
